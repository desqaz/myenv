
#------------------------------------------------------------------------------
# Prompt help
#------------------------------------------------------------------------------
prompt_myenv_help () {
   cat << EOH
myenv standard prompt      
EOH
}

#------------------------------------------------------------------------------
# Prompt preview
#------------------------------------------------------------------------------
prompt_myenv_preview () {
   prompt_preview_theme myenv
}

#------------------------------------------------------------------------------
# Global variable needed for hooks
#------------------------------------------------------------------------------
declare -x PromptMODPromptMODCmdTimeProcess="no"
declare -x PromptMODCmdLaunched="no"
declare -x PromptMODTimeUnity=""

declare -ix PromptMODCmdTime=0
declare -ix PromptMODTimeMs=0
declare -ix PromptMODTimeSec=0

declare -ix PromptMODTimeRemindMs=0
declare -ix PromptMODTimeRemindSec=0

#------------------------------------------------------------------------------
# Prompt setup
#------------------------------------------------------------------------------
prompt_myenv_setup () {
   autoload colors zsh/terminfo

   if [[ "$terminfo[colors]" -ge 8 ]] {
       colors
   }

   PR_NO_COLOR="%{$terminfo[sgr0]%}"
   for color in RED GREEN YELLOW BLUE MAGENTA CYAN WHITE BLACK; do
       eval PR_$color='$PR_NO_COLOR%{$terminfo[bold]$fg[${(L)color}]%}'
       eval PR_L$color='$PR_NO_COLOR%{$fg[${(L)color}]%}'
       (( count = $count + 1 ))
   done

   PR_LINE_COLOR=$PR_BLUE
   PR_PTS_COLOR=$PR_BLUE
   PR_PWD_COLOR=$PR_CYAN
   PR_GIT_COLOR=$PR_YELLOW
   PR_LOGIN_COLOR=$PR_GREEN
   PR_HOST_COLOR=$PR_MAGENTA
   PR_HISTORY_COLOR=$PR_YELLOW
   PR_ERROR_COLOR=$PR_RED
   PR_CT_COLOR=$PR_YELLOW
   PR_TIME_COLOR=$PR_WHITE
   PR_PS2_COLOR=$PR_YELLOW

   typeset -A altchar
   set -A altchar ${(s..)terminfo[acsc]}
   PR_SET_CHARSET="%{$terminfo[enacs]%}"
   PR_IN="%{$terminfo[smacs]%}"
   PR_OUT="%{$terminfo[rmacs]%}"
   PR_HB=$PR_LINE_COLOR$PR_IN${altchar[q]:--}$PR_OUT
   PR_HB_FILL=${altchar[q]:--}
   PR_UL=$PR_LINE_COLOR$PR_IN${altchar[l]:--}$PR_OUT
   PR_LL=$PR_LINE_COLOR$PR_IN${altchar[m]:--}$PR_OUT
   PR_LR=$PR_LINE_COLOR$PR_IN${altchar[j]:--}$PR_OUT
   PR_UR=$PR_LINE_COLOR$PR_IN${altchar[k]:--}$PR_OUT

   myenv_setup_prompt

   PROMPT='$PR_SET_CHARSET\
$PR_UL$PR_PTS$PR_PWD$PR_GIT$PR_IN${(e)PR_FILLBAR}$PR_OUT$PR_LOGIN$PR_HOST$PR_UR
$PR_LL$PR_HISTERR$PR_HB$PR_NO_COLOR '

   RPROMPT=' $PR_HB$PR_CT$PR_TIME$PR_LR$PR_NO_COLOR'

   PS2='$PR_PS2$PR_NO_COLOR '

#------------------------------------------------------------------------------
   precmd () {
      setopt prompt_subst
# For command time
      PromptMODCmdTime=0
      PromptMODTimeUnity=""

         if [[ "$PromptMODPromptMODCmdTimeProcess" = "yes" ]] && [[ "$PromptMODCmdLaunched" = "yes" ]] {
            PromptMODCmdLaunched="no"
            PromptMODTimeMs=`date +%N`
            PromptMODTimeSec=$SECONDS
            PromptMODCmdTime="$PromptMODTimeSec - $PromptMODTimeRemindSec"
            PromptMODTimeUnity=" s"

            if [[ $PromptMODCmdTime -lt 1 ]] {
               PromptMODCmdTime="$PromptMODTimeMs - $PromptMODTimeRemindMs"
               PromptMODCmdTime=$PromptMODCmdTime/1000000
               PromptMODTimeUnity=" ms"
            }
        }
      myenv_setup_prompt

      # Reset WINCH trap
      functions[TRAPWINCH]="zle && myenv_setup_prompt && zle reset-prompt"
   }
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
   preexec(){
# For command time
      PromptMODPromptMODCmdTimeProcess="yes"
      PromptMODCmdLaunched="yes"

      if [[ "$TTY" != "" ]] {
          PromptMODTimeRemindMs=`date +%N`
          PromptMODTimeRemindSec=$SECONDS
      }
   }
#------------------------------------------------------------------------------
}

#------------------------------------------------------------------------------
# Prompt utils functions
#------------------------------------------------------------------------------
myenv_title() {
   print -Pn "\e]2; $* \a" # plain xterm myenv_title
}

myenv_git_resume() {
   RemoteRepo=$(git remote show | head -n 1)
   if [[ "$RemoteRepo" != "" ]] {
      RemoteRepoUrl=$(git remote show $RemoteRepo -n | sed -n -e 's/^\s*Fetch\s\+URL:\s\+\(.*$\)/\1/p')
      echo "$RemoteRepoUrl"
   }
}

#------------------------------------------------------------------------------
# Prompt
#------------------------------------------------------------------------------
myenv_setup_prompt () {

   local promptsize=${#${(%):----}}
   local ptssize=${#${(%):--(%l:%L:%j)-}}
   local pwdsize=${#${(%):--(%d)-}}
   local gitsize=0
   local loginsize=${#${(%):--(%n)-}}
   local hostsize=${#${(%):--(%m)-}}
   local termwidth=${COLUMNS}
   local fillsize
   local cursize

   PR_FILLBAR=""
   PR_PWDLEN=""

   PR_OPEN="$PR_HB("
   PR_CLOSE="$PR_LINE_COLOR)$PR_HB"
   PR_PTS=""
   PR_PWD=""
   PR_GIT=""
   PR_LOGIN=""
   PR_HOST=""
   PR_HISTERR="$PR_OPEN$PR_HISTORY_COLOR%h%(?..$PR_ERROR_COLOR %?)$PR_CLOSE"
   PR_PS2="$PR_OPEN$PR_PS2_COLOR%_$PR_CLOSE"
   PR_CT="$PR_OPEN$PR_CT_COLOR$PromptMODCmdTime$PromptMODTimeUnity$PR_CLOSE"
   PR_TIME="$PR_OPEN$PR_TIME_COLOR%D{%H:%M:%S}$PR_CLOSE"

   (( cursize = $promptsize ))

   if [[ "$cursize + $ptssize" -le $termwidth ]] {
      PR_PTS="$PR_OPEN$PR_PTS_COLOR%l:%L:%j$PR_CLOSE"
      (( cursize  = $cursize + $ptssize ))

      if [[ "$cursize + $pwdsize" -le $termwidth ]] {
         PR_PWD="$PR_OPEN$PR_PWD_COLOR%d$PR_CLOSE"
         (( cursize  = $cursize + $pwdsize ))

         if [[ "$cursize + $pwdsize" -le $termwidth ]] {
            PR_GIT_RESUME=$(myenv_git_resume)
            if [[ ${#${PR_GIT_RESUME}} -gt 0 ]] {
               PR_GIT="$PR_LINE_COLOR($PR_GIT_COLOR$PR_GIT_RESUME$PR_LINE_COLOR)"
               gitsize=${#${(%):--($PR_GIT_RESUME)-}}
               (( cursize  = $cursize + $gitsize ))
            }

            if [[ "$cursize + $loginsize" -le $termwidth ]] {
               PR_LOGIN="$PR_OPEN$PR_LOGIN_COLOR%n$PR_CLOSE"
               (( cursize  = $cursize + $loginsize ))

               if [[ "$cursize + $hostsize" -le $termwidth ]] {
                  PR_HOST="$PR_OPEN$PR_HOST_COLOR%m$PR_CLOSE"
                  (( cursize  = $cursize + $hostsize ))
               }
            }
         }
      } else {
         if [[ "$termwidth - $cursize" -gt 6 ]] {
            (( PR_PWDLEN = $termwidth - $cursize - 4))
            (( cursize = $termwidth ))
            PR_PWD="$PR_OPEN$PR_PWD_COLOR%$PR_PWDLEN<...<%d%<<$PR_CLOSE"
         }
      }
   }

   (( fillsize = $termwidth - $cursize ))
   PR_FILLBAR="\${(l.$fillsize..${PR_HB_FILL}.)}"

   myenv_title %d
}

prompt_myenv_setup
