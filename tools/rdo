#! /bin/bash --norc

RootDir=$(pwd)
RcFile=$HOME/.rrc
RemoteWorkDir=$(echo $RootDir | sed -e 's?/?_?g')

quiet=
sync=1
progressOpt=
force=0

if test ! -f $RcFile; then
	echo 'Please create this file : $HOME/.rrc' 1>&2
	echo '.rrc example : ' 1>&2
	echo 'RrcServer=user@star' 1>&2
	echo 'RrcRemoteRootDir=BASES' 1>&2
	exit 1
fi

source $RcFile

if test -z $RrcServer; then
	echo 'Bad $HOME/.rrc file' 1>&2
	echo 'Missing RrcServer variable' 1>&2
	exit 1
fi
if test -z $RrcRemoteRootDir; then
	echo 'Bad $HOME/.rrc file' 1>&2
	echo 'Missing RrcRemoteRootDir variable' 1>&2
	exit 1
fi


#
# PARSE OPTIONS
#

zzz=$(rsync --info=progress2 . . -q > /dev/null 2>&1)
if [ $? -eq 0 ]; then progressOpt='--info=progress2'; fi


if [ "$1" = '-n' ]; then
	sync=0
   	shift
elif [ "$1" = '-q' ]; then
	quiet=1
	progressOpt=
	shift
elif [ "$1" = '-f' ]; then
	force=1
	shift
fi


#
# HELPERS
#

syncL2R() {
	if [ $force -eq 1 ]; then
		[ -z "$quiet" ] && printf "\e[0;36mDestroying remote dir ... \e[0m\n" 1>&2
		ssh $RrcServer "if test -d $RrcRemoteRootDir/$RemoteWorkDir; then chmod -R 777 $RrcRemoteRootDir/$RemoteWorkDir && rm -rf $RrcRemoteRootDir/$RemoteWorkDir; fi"
	fi
	if [ $sync -eq 1 ]; then
		[ -z "$quiet" ] && printf "\e[0;36mSyncing local ->> remote \e[0m\n" 1>&2
		ssh $RrcServer "mkdir -p $RrcRemoteRootDir/$RemoteWorkDir"
		rsync $progressOpt -au --delete . $RrcServer:$RrcRemoteRootDir/$RemoteWorkDir/. 1>&2 || exit 123
	fi
}

syncR2L() {
	if [ $sync -eq 1 ]; then
		[ -z "$quiet" ] && printf "\e[0;36mSyncing local <<- remote \e[0m\n" 1>&2
		rsync $progressOpt -au --exclude='.git*/' --exclude='.tmp.exclude/' --delete $RrcServer:$RrcRemoteRootDir/$RemoteWorkDir/. . 1>&2
	fi
}

syncL2R
printf "\e[0;1;35mRemote Exec \e[33m$*\e[0m\n" 1>&2
ssh -t $RrcServer "cd $RrcRemoteRootDir/$RemoteWorkDir && $@"
exitCode=$?
syncR2L

exit $exitCode

