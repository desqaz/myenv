#!/bin/bash --norc

shortOpt=

if   [ "$1" = "-s" ] || [ -z "$1" ]; then
	[ "$1" = "-s" ] && shortOpt='-sbu'; git status $shortOpt; exit 0;
fi

if   [ "$1" = "-ss" ];  then shortOpt=; shift
elif [ "$1" = "-sss" ]; then shortOpt='-sbu'; shift; fi

dirs="$@"
[ -z "$dirs" ] && dirs='$PWD'

gstatus () {
	git status $shortOpt
}

bstatus () {
	if [ -z "$(git branch | grep '^*' | grep "(HEAD")" ]; then
		gup=$(git log --oneline --stat origin/$(git rev-parse --abbrev-ref HEAD)..HEAD)
		if [ -n "$gup" ]; then
		   	echo "[0;34mUnpushed ---[0m"
			git log --oneline --stat origin/$(git rev-parse --abbrev-ref HEAD)..HEAD;
		fi
	fi
}

gl() {
	git --no-pager log -n1 $@ --pretty="%h | %<(16)%cr | %<(20)%cn | %<(70,trunc)%s" --date=local\
	   	| sed "s@\($(git config user.name)\|$USER\\|$MYENV_NAME\)@\1@g"
}

stateDir () {
	gl 
  	gstatus
	bstatus
}

for d in $dirs; do
	gss=$(git submodule status --recursive)
	if [ -n "$gss" ]; then
		echo "[0;34m-------------------------------------------------------------------------------- [1m$PWD[0m"
	fi
	stateDir
	if [ -n "$gss" ]; then
		for sm in $(git submodule status --recursive | awk -F '(' '{print $1}' | awk '{print $2}'); do
			subpath=$PWD/$sm
			echo "[0;34m-------------------------------------------------------------------------------- [1m$subpath[0m"
			cd $subpath;
		   	stateDir
		   	cd - > /dev/null
		done
	fi
done
