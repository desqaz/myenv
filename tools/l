#! /bin/bash --norc

baseSetenv='tools/build/setenv'

if [ -f $baseSetenv ]; then
   	. $baseSetenv
else
	LMAKE_ROOT_DIR=/soft/lmake2_3.6
	INSIGHT_ROOT_DIR=/soft/insight_7.3.50

	export SGE_ROOT=/soft/sgeroot
	export SGE_LONG_QNAMES=1
	export PATH=tools/build:tools/scripts:$PATH
	export PATH=$LMAKE_ROOT_DIR/bin:$PATH
	export PATH=$INSIGHT_ROOT_DIR/bin:$PATH
	export PATH=$SGE_ROOT/bin/lx24-amd64:$PATH
fi


which lmake

function ccache-exe () {
	if [ -n "$(which ccache | grep -v 'not found')" ]; then
		if [ "$(echo $1 | grep make)" ]; then 
			shift
			echo -
			ccache "$@" | grep '^cache'
			echo -
		fi
	fi
}


Cmd="$1"
shift

[ -z "$Cmd" ] && Cmd=make

args="$@"
if [ -z "$args" ]; then
	args=commit.pyok
else
	if [ -f "$args.pylist" ]; then args="$args.pylist"; fi
	if [ "$args" = 'all' ] && [ ! -e "$args.pylist" ]; then args="$(ls *.pylist | sed 's@.pylist@.pyok@g')"; fi
fi

args="$(echo "$args" | sed 's@.pylist$@.pyok@g')"


case "$Cmd" in
	clean)
		exeCmd='cleanlmake'
		;;
	depend|m5|newdep|rerun|rmdep|stable|transcienterr|unstable)
		exeCmd="$Cmd "$args""
		;;
	sgestat)
		exeCmd="sgestat "$@""
		;;
	debug)
		Target="$1"
		lshow -c $Target
		gdb -ex 'set follow-fork-mode child' --args python -S "%STATE/ancillary/$Target/cmd"
		;;
	*)
		ccache-exe $Cmd -z > /dev/null
		exeCmd="l$Cmd "$args""
		;;
esac	


echo ">> [0;1;36m$exeCmd[0m"
$exeCmd

ccache-exe $Cmd -s 

